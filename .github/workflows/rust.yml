name: Rust

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: taiki-e/install-action@nextest

      - name: Collect coverage data
        run: cargo llvm-cov --cobertura --output-path coverage.xml

      - name: Run Text coverage data
        run: cargo llvm-cov nextest > test_coverage.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: test-coverage-report
          path: test_coverage.xml

      - name: Code Coverage Report
        id: coverage
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "50 80"

      - name: Add Label if Coverage Below Threshold
        if: ${{ steps.coverage.outcome == 'failure' }}
        run: |
          # Get pull request number
          PR_NUMBER=$(jq -r '.pull_request.number' "$GITHUB_EVENT_PATH")

          # Add label to pull request
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"labels":["bypass_coverage"]}' \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/labels"

      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.pulls.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })

