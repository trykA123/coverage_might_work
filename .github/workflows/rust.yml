name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      # - name: Build
      #   run: cargo build --verbose
      # - name: Run tests
      #   run: cargo test --verbose

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: taiki-e/install-action@cargo-llvm-cov

      - name: Collect coverage data
        run: cargo llvm-cov --cobertura --output-path coverage.xml

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "20 80"

      - name: Check for "Coverage Override" label
        if: github.event_name == 'pull_request'
        id: check_label
        uses: actions/github-script@v5
        with:
          script: |
            const { data: labels } = await github.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });
            const coverageOverrideLabel = labels.find(label => label.name === 'Coverage Override');
            if (coverageOverrideLabel) {
              console.log('Coverage override label found. Allowing merge.');
              process.exit(0);
            } else {
              console.log('Coverage override label not found. Blocking merge.');
              process.exit(1);
            }
